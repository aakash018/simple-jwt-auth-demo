[{"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\index.tsx":"1","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\App.tsx":"2","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Input\\index.tsx":"3","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Input\\style.ts":"4","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\Login\\index.tsx":"5","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Btn\\index.tsx":"6","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Btn\\style.ts":"7","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\SignUp\\index.tsx":"8","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\contianer.style.ts":"9","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\form.style.ts":"10","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\wraper.style.ts":"11","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\AdditionalText.style.ts":"12","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\globalStyle.style.ts":"13","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\context\\Auth.tsx":"14","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\Home\\index.tsx":"15","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\PrivateRoute.tsx":"16","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\variables.ts":"17"},{"size":199,"mtime":1609031744495,"results":"18","hashOfConfig":"19"},{"size":826,"mtime":1609575015266,"results":"20","hashOfConfig":"19"},{"size":577,"mtime":1609064756160,"results":"21","hashOfConfig":"19"},{"size":727,"mtime":1609072052693,"results":"22","hashOfConfig":"19"},{"size":3064,"mtime":1610105335973,"results":"23","hashOfConfig":"19"},{"size":492,"mtime":1609078181227,"results":"24","hashOfConfig":"19"},{"size":543,"mtime":1609079636382,"results":"25","hashOfConfig":"19"},{"size":2233,"mtime":1609478280701,"results":"26","hashOfConfig":"19"},{"size":310,"mtime":1609077114473,"results":"27","hashOfConfig":"19"},{"size":220,"mtime":1609077123421,"results":"28","hashOfConfig":"19"},{"size":199,"mtime":1609077131755,"results":"29","hashOfConfig":"19"},{"size":305,"mtime":1609077142693,"results":"30","hashOfConfig":"19"},{"size":291,"mtime":1609077164906,"results":"31","hashOfConfig":"19"},{"size":1635,"mtime":1610104799613,"results":"32","hashOfConfig":"19"},{"size":1227,"mtime":1610105494274,"results":"33","hashOfConfig":"19"},{"size":551,"mtime":1609934635142,"results":"34","hashOfConfig":"19"},{"size":415,"mtime":1610104927351,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"p0sxc6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\index.tsx",[],["73","74"],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\App.tsx",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Input\\index.tsx",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Input\\style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\Login\\index.tsx",["75"],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Btn\\index.tsx",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\Btn\\style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\SignUp\\index.tsx",["76"],"import Input from \"../shared/Input\"\r\nimport Btn from \"../shared/Btn\"\r\nimport axios from \"axios\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Container } from \"../shared/MainForm/contianer.style\"\r\nimport { Form } from \"../shared/MainForm/form.style\"\r\nimport { Wraper } from \"../shared/MainForm/wraper.style\"\r\nimport { AdditionalText } from \"../shared/MainForm/AdditionalText.style\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst SignUp:React.FC = () => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPass, setConfirmPass] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const [error, setError] = useState({\r\n        display: false,\r\n        errorMessage: \"\"\r\n    })\r\n\r\n    const handleSubmit = async (e:React.FormEvent) => {\r\n        e.preventDefault()\r\n        console.log(\"Ran\")\r\n        // TODO: Add Input Filter\r\n            if(username === \"\" || password === \"\" || confirmPass === \"\" || email === \"\"){\r\n                return setError({\r\n                    display: true,\r\n                    errorMessage: \"Empty Fields\"\r\n                })\r\n            }\r\n        axios\r\n            .post(\"api/signup\", {username, password, email})\r\n            .then(res => {\r\n                console.log(res.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Wraper>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Input type=\"text\" onChange={setUsername} placeholder=\"Username\" />\r\n                    <Input type=\"password\" onChange={setPassword} placeholder=\"Password\" />\r\n                    <Input type=\"password\" onChange={setConfirmPass} placeholder=\"Confirm Password\" />\r\n                    <Input type=\"email\" onChange={setEmail} placeholder=\"Email\" />\r\n                    <section style={{marginTop: \"30px\"}}>\r\n                        <Btn type=\"submit\" width=\"300px\" styleType=\"primary\">Submit</Btn>\r\n                    </section>\r\n                </Form>\r\n                <AdditionalText>\r\n                    Already Have Account! <Link to=\"/login\">Login</Link>\r\n                </AdditionalText>\r\n            </Container>\r\n        </Wraper>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\contianer.style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\form.style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\wraper.style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\MainForm\\AdditionalText.style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\globalStyle.style.ts",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\context\\Auth.tsx",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\Home\\index.tsx",[],"D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\components\\shared\\PrivateRoute.tsx",["77"],"import {Route, Redirect} from \"react-router-dom\"\r\nimport { useAuth } from \"../../context/Auth\"\r\nimport { getToken } from \"../../variables\"\r\n\r\ninterface Props {\r\n    component: any,\r\n    path: any,\r\n    exact: boolean,\r\n}\r\n\r\nconst PrivateRoute:React.FC<Props> = ({component: Component,  ...rest}) => {\r\n\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={props => (\r\n            getToken()? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","D:\\Web_Development\\TypeScript_Learning\\React\\Blood Bank\\client\\src\\variables.ts",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":42,"column":8,"nodeType":"84","endLine":42,"endColumn":10,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":12,"nodeType":"88","messageId":"89","endLine":19,"endColumn":17},{"ruleId":"86","severity":1,"message":"90","line":13,"column":12,"nodeType":"88","messageId":"89","endLine":13,"endColumn":23},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.","ArrayExpression",["93"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"96","text":"97"},[1556,1558],"[history, setCurrentUser]"]